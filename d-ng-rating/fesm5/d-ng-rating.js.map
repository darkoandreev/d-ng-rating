{"version":3,"file":"d-ng-rating.js","sources":["ng://d-ng-rating/lib/ng-rating.error.ts","ng://d-ng-rating/lib/ng-rating-label.directive.ts","ng://d-ng-rating/util/key.ts","ng://d-ng-rating/lib/ng-rating.component.ts","ng://d-ng-rating/lib/ng-rating.module.ts","ng://d-ng-rating/public-api.ts","ng://d-ng-rating/d-ng-rating.ts"],"sourcesContent":["export const RATING_SIZE_ERROR = () => {\n  throw Error('Rating size must be greater than zero.');\n};\n\nexport const RATE_SET_ERROR = () => {\n  throw Error('Rate definition must be greather than zero.');\n};\n","import { Directive, TemplateRef, HostBinding } from '@angular/core';\n\n@Directive({\n  selector: '[ngRatingLabel], d-ng-rating-label',\n})\nexport class NgRatingLabelDirective {\n  @HostBinding('class.d-ng-rating-label') get ngRatingLabel(): boolean {\n    return true;\n  }\n}\n","export enum Key {\n  End = 'End',\n  Home = 'Home',\n  ArrowLeft = 'ArrowLeft',\n  ArrowUp = 'ArrowUp',\n  ArrowRight = 'ArrowRight',\n  ArrowDown = 'ArrowDown',\n}\n","import {\n  Component,\n  ChangeDetectionStrategy,\n  Output,\n  EventEmitter,\n  forwardRef,\n  Input,\n  HostBinding,\n  ContentChild,\n  OnChanges,\n  SimpleChanges,\n  HostListener,\n  ViewEncapsulation,\n  TemplateRef,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { faStar, faBan, IconDefinition } from '@fortawesome/free-solid-svg-icons';\nimport { RATING_SIZE_ERROR, RATE_SET_ERROR } from './ng-rating.error';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { NgRatingLabelDirective } from './ng-rating-label.directive';\nimport { Key } from '../util/key';\n\n/**\n * Provider that allows the rating component to register as a ControlValueAccessor.\n * @docs-private @internal\n */\nexport const NG_RATING_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => NgRatingComponent),\n  multi: true,\n};\n\n/**\n * Rating item model.\n */\nexport interface IRatingContext {\n  hovered: boolean;\n}\n\nlet UNIQUE_ID = 0;\n\n/**\n * Rating components is a star based selection input.\n * A star rating usually consists of images of stars that can be used to rate a particular item.\n * A mouse user hovers over the stars and clicks one to select it.\n * For example, if the user clicks on the third star from the left, the rating of the item is 3 of 5 stars.\n * ```\n * @example\n * <d-ng-rating [input bindings]>\n *  <ng-template ngRatingLabel>{{ this.ratingLabel }}</ng-template>\n * </d-ng-rating>\n * ```\n *\n * @export\n */\n@Component({\n  selector: 'd-ng-rating',\n  templateUrl: './ng-rating.component.html',\n  styleUrls: ['./ng-rating.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [NG_RATING_VALUE_ACCESSOR],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class NgRatingComponent implements OnChanges, ControlValueAccessor {\n  /** @hidden @internal */\n  public ratings: IRatingContext[];\n\n  /** Currently selected rating item index\n   * @hidden @internal\n   */\n  public _selectedIndex = -1;\n\n  /** @hidden @internal */\n  @ContentChild(NgRatingLabelDirective) public ratingLabelTemplate: NgRatingLabelDirective;\n\n  @HostBinding('class.ng-star-rating') get starRatingClass(): boolean {\n    return true;\n  }\n\n  /** A unique id for the rating input. If none is supplied, it will be auto-generated. */\n  @HostBinding('attr.id')\n  @Input()\n  public id = `ng-star-rating-${UNIQUE_ID++}`;\n\n  /**\n   * Attached to the aria-label attribute of the host element.\n   * In most cases, aria-labelledby will take precedence so this may be omitted.\n   */\n  @HostBinding('attr.aria-label')\n  @Input('aria-label')\n  public ariaLabel = 'star';\n\n  /**\n   * Users can specify the `aria-labelledby` attribute which will be forwarded to the input element.\n   */\n  @HostBinding('attr.aria-labelledby')\n  @Input('aria-labelledby')\n  public ariaLabelledby: string | undefined = 'Star rating';\n\n  @HostBinding('attr.aria-valuemin') get ariaValueMin(): number {\n    return 0;\n  }\n\n  @HostBinding('attr.aria-valuemax') get ariaValueMax(): number {\n    return this.size;\n  }\n\n  @HostBinding('attr.aria-valuenow') get ariaValueNow(): number {\n    return this._selectedIndex + 1;\n  }\n\n  @HostBinding('attr.aria-valuetext') get ariaValueTextAttr(): string {\n    return this.ariaValueText;\n  }\n\n  @HostBinding('attr.role') get role(): string {\n    return 'slider';\n  }\n\n  @HostBinding('attr.tabindex') get tabindexAttr(): number {\n    return this.disabled ? -1 : 0;\n  }\n\n  @HostBinding('attr.aria-disabled') get ariaDisabled(): boolean {\n    return this.disabled;\n  }\n\n  @HostBinding('attr.aria-readonly') get ariaReadonly(): boolean {\n    return this.readonly;\n  }\n\n  @HostBinding('attr.aria-setsize') get ariaSetSize(): number {\n    return this.size;\n  }\n\n  /**\n   * Gets/sets the `rating` for the component.\n   * Determines selected rate items.\n   * @example\n   * ```html\n   * <d-ng-rating [rating]=\"5\"></d-ng-rating>\n   * ```\n   * @memberOf NgRatingComponent\n   */\n  @Input()\n  public get rating(): number {\n    return this._rating;\n  }\n  public set rating(value: number) {\n    if (value <= 0) {\n      RATE_SET_ERROR();\n    }\n    this._rating = coerceNumberProperty(value);\n  }\n  private _rating: number;\n\n  /**\n   * Gets/sets the `size` for the component.\n   * Sets max number of rate items.\n   * @example\n   * ```html\n   * <d-ng-rating [size]=\"5\"></d-ng-rating>\n   * ```\n   * @memberOf NgRatingComponent\n   */\n  @Input()\n  public get size(): number {\n    return this._size;\n  }\n  public set size(value: number) {\n    if (value <= 0) {\n      RATING_SIZE_ERROR();\n    }\n\n    this._size = coerceNumberProperty(value);\n    this.ratings = Array.from(new Array(value)).map(() => {\n      const rating: IRatingContext = {\n        hovered: false,\n      };\n      return rating;\n    });\n  }\n  private _size = 5;\n\n  /**\n   * Gets/sets the `readonly` property.\n   * Determines if the rate component is readonly.\n   * By default it's **false**.\n   * @example\n   * ```html\n   * <d-ng-rating readonly></d-ng-rating>\n   * ```\n   * @memberOf NgRatingComponent\n   */\n  @Input()\n  public get readonly(): boolean {\n    return this._readonly;\n  }\n  public set readonly(value: boolean) {\n    this._readonly = coerceBooleanProperty(value);\n  }\n  private _readonly = false;\n\n  /**\n   * Gets/sets the `disabled` property.\n   * Whether the rate component is disabled.\n   * By default rate items are clickable (disabled=false).\n   * @example\n   * ```html\n   * <d-ng-rating disabled></d-ng-rating>\n   * ```\n   * @memberOf NgRatingComponent\n   */\n  @Input()\n  public get disabled(): boolean {\n    return this._disabled;\n  }\n  public set disabled(value: boolean) {\n    this._disabled = coerceBooleanProperty(value);\n  }\n  private _disabled = false;\n\n  /**\n   * Gets/sets the `showCancelIcon` property.\n   * Whether the cancel (clear) icon is visible.\n   * By default it's visible.\n   * @example\n   * ```html\n   * <d-ng-rating [showCancelIcon]=\"false\"></d-ng-rating>\n   * ```\n   * @memberOf NgRatingComponent\n   */\n  @Input()\n  public get showCancelIcon(): boolean {\n    return this._showCancelIcon;\n  }\n  public set showCancelIcon(value: boolean) {\n    this._showCancelIcon = coerceBooleanProperty(value);\n  }\n  private _showCancelIcon = false;\n\n  /**\n   * Gets/sets the `icon` for the rate item.\n   * By default it's **faStar** FontAwesome icon.\n   * @example\n   * ```html\n   * <d-ng-rating [icon]=\"faStar\"></d-ng-rating>\n   * ```\n   * @memberOf NgRatingComponent\n   */\n  @Input() public icon: IconDefinition = faStar;\n\n  /**\n   * Gets/sets the `cancelIcon` for the component.\n   * By default it uses **faBan** FontAwesome icon.\n   * @example\n   * ```html\n   * <d-ng-rating [cancelIcon]=\"faBan\"></d-ng-rating>\n   * ```\n   * @memberOf NgRatingComponent\n   */\n  @Input() public cancelIcon: IconDefinition = faBan;\n\n  /**\n   * An event that is emitted after the rate item is clicked and set.\n   * Provides a number of clicked item - ex. 1,2,3, etc.\n   * @example\n   * ```html\n   * <d-ng-rating [rateChange]=\"change($event)\"></d-ng-rating>\n   * ```\n   */\n  @Output() public rateChange: EventEmitter<number> = new EventEmitter();\n\n  /**\n   * An event that is emitted after the rating is canceled (cleared).\n   * @example\n   * ```html\n   * <d-ng-rating [rateCancel]=\"cancel($event)\"></d-ng-rating>\n   * ```\n   */\n  @Output() public rateCancel: EventEmitter<void> = new EventEmitter();\n\n  /**\n   * The template to override the way each star is displayed.\n   *\n   * Alternatively put an `<ng-template>` as the only child of your `<d-ng-rating>` element\n   * @example\n   * ```html\n   * <d-ng-rating (rateChange)=\"this.ratingLabel = $event\" [size]=\"6\">\n   *   <ng-template let-hovered=\"hovered\">\n   *    <span class=\"star\" [class.filled]=\"hovered\">&#9733;</span>\n   *   </ng-template>\n   * </d-ng-rating>\n   * ```\n   */\n\n  @ContentChild(TemplateRef, { static: false }) ratingTemplateContent: TemplateRef<IRatingContext>;\n  @Input() ratingTemplate: TemplateRef<IRatingContext>;\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if ('rating' in changes && changes.rating.currentValue > 0) {\n      this.ratingsHover(this.rating - 1);\n      this._selectedIndex = this.rating - 1;\n    }\n  }\n\n  /** @hidden @internal */\n  public hoveredItem(index: number): void {\n    if (!this.readonly) {\n      this.ratingsHover(index);\n    }\n  }\n\n  /** @hidden @internal */\n  public handleClick(index: number): void {\n    if (!this.readonly) {\n      this.update(index);\n    }\n  }\n\n  /** @hidden @internal */\n  public cancel(): void {\n    this._selectedIndex = -1;\n    this.ratings.forEach((item: IRatingContext) => (item.hovered = false));\n    this.rateCancel.emit();\n  }\n\n  /** @hidden @internal */\n  @HostListener('mouseleave')\n  public mouseLeave(): void {\n    if (!this.readonly) {\n      this.ratings.forEach((item: IRatingContext, index) => (item.hovered = !(index > this._selectedIndex)));\n    }\n  }\n\n  @HostListener('blur')\n  public blur(): void {\n    this.onTouched();\n  }\n\n  /** Handle rating using arrow keys and home/end keys */\n  @HostListener('keydown', ['$event'])\n  public handleKeyDown(event: KeyboardEvent): void {\n    switch (event.code) {\n      case Key.ArrowDown:\n      case Key.ArrowLeft:\n        if (this._selectedIndex > -1) {\n          this._selectedIndex--;\n          this.update(this._selectedIndex);\n        }\n        break;\n      case Key.ArrowUp:\n      case Key.ArrowRight:\n        if (this._selectedIndex < this.size - 1) {\n          this._selectedIndex++;\n          this.update(this._selectedIndex);\n        }\n        break;\n      case Key.Home:\n        this.update(0);\n        break;\n      case Key.End:\n        this.update(this.size - 1);\n        break;\n      default:\n        return;\n    }\n\n    event.preventDefault();\n  }\n\n  /** @hidden @internal */\n  public writeValue(rating: number): void {\n    if (rating) {\n      this._controlValueAccessorChangeFn(rating);\n      this.rating = rating;\n      this._selectedIndex = rating - 1;\n      this.ratingsHover(rating - 1);\n    }\n  }\n\n  /** @hidden @internal */\n  public registerOnChange(fn: (value: any) => void): void {\n    this._controlValueAccessorChangeFn = fn;\n  }\n\n  /** @hidden @internal */\n  public registerOnTouched(fn: any): void {\n    this.onTouched = fn;\n  }\n\n  /** @hidden @internal */\n  public setDisabledState(value: boolean): void {\n    this.disabled = value;\n  }\n\n  private update(index: number): void {\n    this._selectedIndex = index;\n    this.hoveredItem(this._selectedIndex);\n    this.onTouched();\n    this.rateChange.emit(index + 1);\n  }\n\n  // Function to call when the rating changes.\n  private _controlValueAccessorChangeFn: (value: any) => void = () => {};\n\n  // Function to call when the input is touched (when a star is clicked).\n  private onTouched: () => any = () => {};\n\n  private ratingsHover(index: number): void {\n    this.ratings.forEach((item: IRatingContext, i) => (item.hovered = index >= i));\n  }\n\n  private get ariaValueText(): string {\n    return `${this._selectedIndex + 1} out of ${this.size}`;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { NgRatingComponent } from './ng-rating.component';\nimport { CommonModule } from '@angular/common';\nimport { HammerModule } from '@angular/platform-browser';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { FormsModule } from '@angular/forms';\nimport { NgRatingLabelDirective } from './ng-rating-label.directive';\n\n@NgModule({\n  declarations: [NgRatingComponent, NgRatingLabelDirective],\n  imports: [CommonModule, FormsModule, HammerModule, FontAwesomeModule],\n  exports: [NgRatingComponent, NgRatingLabelDirective],\n})\nexport class NgRatingModule {}\n","/*\n * Public API Surface of d-ng-rating\n */\n\nexport * from './lib/ng-rating.component';\nexport * from './lib/ng-rating.error';\nexport * from './lib/ng-rating.module';\nexport * from './lib/ng-rating-label.directive';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}